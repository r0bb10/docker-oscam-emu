name: Sync Fork with Upstream and Build Docker Image

on:
  schedule:
    - cron: '0 0 * * 0'  # This will run the action weekly on Sundays at midnight
  workflow_dispatch:  # Allows you to manually trigger the action from the Actions tab

jobs:
  sync:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.merge.outputs.changed }}  # Capture output

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensures we fetch all history so we can make changes to any branch

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: git remote add upstream https://github.com/linuxserver/docker-oscam.git

      - name: Fetch upstream changes
        run: git fetch upstream

      - name: Merge upstream into your branch (Ignore specific files)
        id: merge  # Add an ID for this step
        run: |
          git checkout master  # or main, depending on your default branch
          git merge upstream/master --no-commit || echo "No changes to merge"
          if [ $? -eq 0 ]; then
            # Restore files if merge was successful
            git restore --staged README.md
            git checkout -- README.md
            git commit -m "Sync with upstream, keeping my README.md unchanged" || echo "No changes to commit"
            git push origin master || echo "No changes to push"
            echo "::set-output name=changed::true"  # Set output to true
          else
            echo "::set-output name=changed::false"  # Set output to false
            echo "No new changes from upstream."
          fi

  build:
    runs-on: ubuntu-latest
    needs: sync  # Ensure this job runs after the sync job
    if: needs.sync.outputs.changed == 'true'  # Run only if there were changes
    steps:
      - uses: actions/checkout@v2

      # Set up QEMU for emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push multi-arch images
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.arch == 'arm64' && 'Dockerfile.aarch64' || 'Dockerfile' }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: chris230291/oscam-emu:latest
